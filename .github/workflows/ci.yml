name: CI/CD Next.js

on:
  push:
    branches:
      - features
      - staging
      - master
  pull_request:
    branches:
      - features
      - staging
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Next.js code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Next.js code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Next.js
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-out
          path: out/

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Terraform repo
        uses: actions/checkout@v4
        with:
          repository: stephanlbj/infra_terraform
          path: infra-terraform

      - name: Download Next.js build artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-out
          path: out/

      - name: Deploy Staging Infrastructure & App
        run: |
          cd infra-terraform/staging
          terraform init
          terraform apply -auto-approve

          # Récupérer les outputs Terraform
          export AWS_CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          export AWS_S3_BUCKET=$(terraform output -raw s3_bucket_name)

          # Sync Next.js build vers S3
          aws s3 sync ../../out s3://$AWS_S3_BUCKET --delete

          # Invalider le cache CloudFront
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Terraform repo
        uses: actions/checkout@v4
        with:
          repository: stephanlbj/infra_terraform
          path: infra-terraform

      - name: Download Next.js build artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-out
          path: out/

      - name: Deploy Production Infrastructure & App
        run: |
          cd infra-terraform/prod
          terraform init
          terraform apply -auto-approve

          # Récupérer les outputs Terraform
          export AWS_CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          export AWS_S3_BUCKET=$(terraform output -raw s3_bucket_name)

          aws s3 sync ../../out s3://$AWS_S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

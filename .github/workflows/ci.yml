name: CI/CD Next.js

on:
  push:
    branches:
      - features
      - staging
      - master
  pull_request:
    branches:
      - features
      - staging
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: nextjs-out
          path: out/

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
      - run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - uses: actions/checkout@v4
        with:
          repository: stephanlbj/infra_terraform
          path: infra-terraform
      - uses: actions/download-artifact@v4
        with:
          name: nextjs-out
          path: out/
      - run: aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - run: |
          cd infra-terraform/staging
          terraform init -input=false
          terraform plan -out=tfplan -input=false
          terraform apply -input=false tfplan || echo "No infra changes"
          export AWS_CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          export AWS_S3_BUCKET=$(terraform output -raw s3_bucket_name)
          aws s3 sync ../../out s3://$AWS_S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy-prod:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
      - run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - uses: actions/checkout@v4
        with:
          repository: stephanlbj/infra_terraform
          path: infra-terraform
      - uses: actions/download-artifact@v4
        with:
          name: nextjs-out
          path: out/
      - run: aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - run: |
          cd infra-terraform/prod
          terraform init -input=false
          terraform plan -out=tfplan -input=false
          terraform apply -input=false tfplan || echo "No infra changes"
          export AWS_CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          export AWS_S3_BUCKET=$(terraform output -raw s3_bucket_name)
          aws s3 sync ../../out s3://$AWS_S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
